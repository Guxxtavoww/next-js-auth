generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_DB_URL")
  directUrl = env("DIRECT_URL")
}

enum user_role {
  ADMIN
  USER
}

model user {
  user_id                 String                   @id @default(cuid())
  user_name               String?
  user_email              String?                  @unique
  email_verified_at       DateTime?
  user_image_url          String?
  user_password           String?
  user_role               user_role                @default(USER)
  is_two_factor_enabled   Boolean                  @default(false)
  user_accounts           account[]
  two_factor_confirmation two_factor_confirmation?
}

model account {
  account_id                   String  @id @default(cuid())
  account_provider             String
  provider_account_id          String
  refresh_token                String?
  access_token                 String?
  account_expiration_timestamp Int?
  token_type                   String?
  token_scope                  String?
  token_id                     String?
  session_state                String?
  user_id                      String
  user                         user    @relation(fields: [user_id], references: [user_id])

  @@unique([account_provider, provider_account_id])
}

model verification_token {
  id         String   @id @default(cuid())
  email      String
  token      String   @unique
  expires_at DateTime

  @@unique([email, token])
}

model password_reset_token {
  id         String   @id @default(cuid())
  email      String
  token      String   @unique
  expires_at DateTime

  @@unique([email, token])
}

model two_factor_token {
  id         String   @id @default(cuid())
  email      String
  token      String   @unique
  expires_at DateTime

  @@unique([email, token])
}

model two_factor_confirmation {
  id      String @id @default(cuid())
  user_id String
  user    user   @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@unique([user_id])
}
